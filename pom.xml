<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>br.com.sisinfoweb</groupId>
    <artifactId>SisInfoWeb</artifactId>
    <version>1.1.1</version>
    <packaging>war</packaging>

    <name>SisInfoWeb</name>

    <properties>
        <endorsed.dir>${project.build.directory}/endorsed</endorsed.dir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <spring.version>4.3.24.RELEASE</spring.version>
        <spring.data.version>1.11.22.RELEASE</spring.data.version>
        <firebird.version>2.2.14</firebird.version>
        <google.gson.version>2.8.5</google.gson.version>
        <skip.node>true</skip.node> <!-- Serve para Ignorar a execução -->
    </properties>


    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.21.RELEASE</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.1</version>
        </dependency>

        <dependency>
            <groupId>org.firebirdsql.jdbc</groupId>
            <artifactId>jaybird-jdk18</artifactId>
            <version>${firebird.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>2.1.1</version>
        </dependency>
        <!--        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>2.5.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
            <version>2.5.2</version>
            <scope>provided</scope>
        </dependency>-->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-web-api</artifactId>
            <version>7.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${google.gson.version}</version>
        </dependency>

        <!--        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>-->

        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>${spring.data.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
            <type>jar</type>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc-portlet</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.3</version>
        </dependency>



        <!--        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.security.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring.security.version}</version>
        </dependency>-->

    </dependencies>

    <!--    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <name>Spring Snapshots</name>
            <url>https://repo.spring.io/libs-snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>-->

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <compilerVersion>1.7</compilerVersion>
                    <source>1.8</source>
                    <target>1.8</target>
                    <compilerArguments>
                        <endorseddirs>${endorsed.dir}</endorseddirs>
                    </compilerArguments>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.2.3</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <packagingExcludes>resources/node_modules/**</packagingExcludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${endorsed.dir}</outputDirectory>
                            <silent>true</silent>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>javax</groupId>
                                    <artifactId>javaee-endorsed-api</artifactId>
                                    <version>7.0</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.7.6</version>

                <!-- optional -->
                <configuration>
                    <workingDirectory>src/main/resources</workingDirectory>
                    <installDirectory>target</installDirectory>
                    <!--<foo>bar</foo>-->
                </configuration>

                <executions>

                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <configuration>
                            <!-- See https://nodejs.org/en/download/ for latest node and npm (lts) versions -->
                            <nodeVersion>v10.15.3</nodeVersion>
                            <npmVersion>6.4.1</npmVersion>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <!-- Optional configuration which provides for running any npm command -->
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    
                    <!--Este eh um plugin para minimificar o arquivo JavaScript-->
                    <execution>
                        <id>npm install uglifyjs-webpack-plugin</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install uglifyjs-webpack-plugin --save-dev</arguments>
                        </configuration>
                    </execution>

                    <!--Este eh um plugin para processar e juntar os arquivos CSS-->
                    <execution>
                        <id>npm install css-loader</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install css-loader --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!--Este eh um plugin para copiar os arquivos que precisamos dentro da pasta publica.
                    Como os arquivos de imagens -->
                    <execution>
                        <id>npm install copy-webpack-plugin</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install copy-webpack-plugin --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!-- esolve import / require () em um arquivo em uma url e emite o arquivo no diretório de saída. -->
                    <execution>
                        <id>npm install file-loader</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install file-loader --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!--Este eh um plugin para processar e juntar os arquivos HTML-->
                    <execution>
                        <id>npm install clean-webpack-plugin</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install clean-webpack-plugin --save-dev</arguments>
                        </configuration>
                    </execution>

                    <!--Este eh um plugin para juntar os arquivos CSS-->
                    <execution>
                        <id>npm install mini-css-extract-plugin</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install mini-css-extract-plugin --save-dev</arguments>
                        </configuration>
                    </execution>

                    <!--Este eh um plugin para minimificar o arquivo CSS-->
                    <execution>
                        <id>npm install optimize-css-assets-webpack-plugin</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install optimize-css-assets-webpack-plugin --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!--Este eh caregar as telas feitas com a extencao *.vue-->
                    <execution>
                        <id>npm install vue-loader</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install vue-loader --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!--Este eh caregar as telas feitas com a extencao *.vue-->
                    <execution>
                        <id>npm install vue-template-compiler</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install vue-template-compiler --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!--Biblioteca para fazer comunicacao com o servidor webservice via http-->
                    <execution>
                        <id>npm install axios</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install axios --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!--Biblioteca com componentes e designers prontos-->
                    <execution>
                        <id>npm install vue</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install vue --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!--Biblioteca com componentes e designers prontos-->
                    <execution>
                        <id>npm install vuetify</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install vuetify --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!--Core que o babel-loader precisa como dependente -->
                    <execution>
                        <id>npm install @babel/core</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install @babel/core --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!--Core que o babel-loader precisa como dependente -->
                    <execution>
                        <id>npm install @babel/preset-env</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install @babel/preset-env --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!--Transpilar os arquivos .js-->
                    <execution>
                        <id>npm install babel-loader</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install babel-loader --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!-- Uma biblioteca de utilitários JavaScript moderna que oferece modularidade, desempenho e extras -->
                    <execution>
                        <id>npm install lodash</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install lodash --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <!-- Icones do Material design que o vuetify utiliza. Para usar Vuetify offline -->
                    <execution>
                        <id>npm install material-design-icons-iconfont</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.node}</skip>
                            <arguments>install material-design-icons-iconfont --save-dev</arguments>
                        </configuration>
                    </execution>
                    
                    <execution>
                        <goals>
                            <goal>webpack</goal>
                        </goals>
                        <id>webpack</id>

                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>

                        <configuration>
                            <!-- optional: if not specified, it will run webpack's default
                            build (and you can remove this whole <configuration> section.) -->
                            <!--<arguments>-p</arguments>-->
                        </configuration>
                    </execution>

                </executions>
            </plugin>
        </plugins>
    </build>
    <description>Projeto para usar banco de dados do SisInfo em um servidor REST e para usar em sistema de ERP na web.
    </description>
</project>
